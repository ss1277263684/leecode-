1528 重新排列字符串
	给你一个字符串 s 和一个 长度相同 的整数数组 indices 。
	请你重新排列字符串 s ，其中第 i 个字符需要移动到 indices[i] 指示的位置。
	返回重新排列后的字符串。
	JS:
	1、字符串的长度和数组长度是一致的，数组的元素与字符串的字符一一对应
	2、数组的值 为 对应字符 在新的字符串的序列号
	3、创建一个长度与数组相同的空数组（  自己：let newArray = [...oldArray]，更好：let newArray = new Array(oldArray.length)  )
	4、将 对应字符 放入 新的序列号中（for 循环，newArray(oldArray[i] = str[i]）
	5、在通过join("")得到重新排列的字符串
	

242  判断字母异位
	给定两个字符串 s 和 t ，编写一个函数来判断 t 是否是 s 的字母异位词
	
	# len(t) == len(s), for ch in s, ch in t, complete loop => true else false
	# len(s) == len(s), s/t => List, sort , join, s == t => true else false
	
1030 距离顺序排列矩阵单元格
	给出 R 行 C 列的矩阵，其中的单元格的整数坐标为 (r, c)，满足 0 <= r < R 且 0 <= c < C。
	另外，我们在该矩阵中给出了一个坐标为 (r0, c0) 的单元格。
	返回矩阵中的所有单元格的坐标，并按到 (r0, c0) 的距离从最小到最大的顺序排，
	其中，两单元格(r1, c1) 和 (r2, c2) 之间的距离是曼哈顿距离，|r1 - r2| + |c1 - c2|。（你可以按任何满足此条件的顺序返回答案。）
